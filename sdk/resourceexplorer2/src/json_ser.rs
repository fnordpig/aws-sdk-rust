// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_default_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::AssociateDefaultViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.view_arn {
        object.key("ViewArn").string(var_1.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_batch_get_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::BatchGetViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_2) = &input.view_arns {
        let mut array_3 = object.key("ViewArns").start_array();
        for item_4 in var_2 {
             {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_index_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::CreateIndexInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_5) = &input.client_token {
        object.key("ClientToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.tags {
        let mut object_7 = object.key("Tags").start_object();
        for (key_8, value_9) in var_6 {
             {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::CreateViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_10) = &input.client_token {
        object.key("ClientToken").string(var_10.as_str());
    }
    if let Some(var_11) = &input.filters {
        let mut object_12 = object.key("Filters").start_object();
        crate::json_ser::serialize_structure_crate_model_search_filter(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.included_properties {
        let mut array_14 = object.key("IncludedProperties").start_array();
        for item_15 in var_13 {
             {
                let mut object_16 = array_14.value().start_object();
                crate::json_ser::serialize_structure_crate_model_included_property(&mut object_16, item_15)?;
                object_16.finish();
            }
        }
        array_14.finish();
    }
    if let Some(var_17) = &input.tags {
        let mut object_18 = object.key("Tags").start_object();
        for (key_19, value_20) in var_17 {
             {
                object_18.key(key_19.as_str()).string(value_20.as_str());
            }
        }
        object_18.finish();
    }
    if let Some(var_21) = &input.view_name {
        object.key("ViewName").string(var_21.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_index_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::DeleteIndexInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_22) = &input.arn {
        object.key("Arn").string(var_22.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::DeleteViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_23) = &input.view_arn {
        object.key("ViewArn").string(var_23.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::GetViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_24) = &input.view_arn {
        object.key("ViewArn").string(var_24.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_indexes_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListIndexesInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_25) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_25).into()));
    }
    if let Some(var_26) = &input.next_token {
        object.key("NextToken").string(var_26.as_str());
    }
    if let Some(var_27) = &input.regions {
        let mut array_28 = object.key("Regions").start_array();
        for item_29 in var_27 {
             {
                array_28.value().string(item_29.as_str());
            }
        }
        array_28.finish();
    }
    if let Some(var_30) = &input.r#type {
        object.key("Type").string(var_30.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_supported_resource_types_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListSupportedResourceTypesInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_31) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_31).into()));
    }
    if let Some(var_32) = &input.next_token {
        object.key("NextToken").string(var_32.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_views_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::ListViewsInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_33) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_33).into()));
    }
    if let Some(var_34) = &input.next_token {
        object.key("NextToken").string(var_34.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_search_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::SearchInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_35) = &input.max_results {
        object.key("MaxResults").number(#[allow(clippy::useless_conversion)]aws_smithy_types::Number::NegInt((*var_35).into()));
    }
    if let Some(var_36) = &input.next_token {
        object.key("NextToken").string(var_36.as_str());
    }
    if let Some(var_37) = &input.query_string {
        object.key("QueryString").string(var_37.as_str());
    }
    if let Some(var_38) = &input.view_arn {
        object.key("ViewArn").string(var_38.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::TagResourceInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_39) = &input.tags {
        let mut object_40 = object.key("Tags").start_object();
        for (key_41, value_42) in var_39 {
             {
                object_40.key(key_41.as_str()).string(value_42.as_str());
            }
        }
        object_40.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_index_type_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::UpdateIndexTypeInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_43) = &input.arn {
        object.key("Arn").string(var_43.as_str());
    }
    if let Some(var_44) = &input.r#type {
        object.key("Type").string(var_44.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_view_input(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::input::UpdateViewInput) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_45) = &input.filters {
        let mut object_46 = object.key("Filters").start_object();
        crate::json_ser::serialize_structure_crate_model_search_filter(&mut object_46, var_45)?;
        object_46.finish();
    }
    if let Some(var_47) = &input.included_properties {
        let mut array_48 = object.key("IncludedProperties").start_array();
        for item_49 in var_47 {
             {
                let mut object_50 = array_48.value().start_object();
                crate::json_ser::serialize_structure_crate_model_included_property(&mut object_50, item_49)?;
                object_50.finish();
            }
        }
        array_48.finish();
    }
    if let Some(var_51) = &input.view_arn {
        object.key("ViewArn").string(var_51.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_search_filter(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::SearchFilter) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_52) = &input.filter_string {
        object.key("FilterString").string(var_52.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_included_property(object: &mut aws_smithy_json::serialize::JsonObjectWriter, input: &crate::model::IncludedProperty) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_53) = &input.name {
        object.key("Name").string(var_53.as_str());
    }
    Ok(())
}

